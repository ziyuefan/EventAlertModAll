<Ui xmlns="http://www.blizzard.com/wow/ui/" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\FrameXML\UI.xsd">
	
	<Script file="EventAlert_IconOptions.lua" />
	
	<Frame 	name="EA_Icon_Options_Frame" 
			hidden="true" 
			parent="EA_Options_Frame" 
			toplevel="true" 
			movable="true" 
			frameStrata="MEDIUM" 
			enableMouse="true" 
			enableKeyboard="true">
		<Size>
			<AbsDimension x="410" y="660" />
		</Size>
		<Anchors>
			<Anchor relativepoint="RIGHT" point="LEFT" />
		</Anchors>
		
		<Frames>
			<CheckButton 	name="$parent_LockFrame" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="50" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_LOCKFRAME)
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.LockFrame = true
						else
							EA_Config.LockFrame = false
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_LOCKFRAME)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton 	name="$parent_ShareSettings" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_LockFrame" 
							relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_SHARESETTING)
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.ShareSettings = true
						else
							EA_Config.ShareSettings = false
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SHARESETTINGS)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			<Slider name="$parent_IconSize" 
					inherits="OptionsSliderTemplate">
				<Anchors>
					
					<!-- <Anchor point="TOP" relativeTo="$parent_LockFrame" relativePoint="BOTTOMLEFT"> -->
					<Anchor point="TOP" 
							relativeTo="EA_Icon_Options_Frame" 
							relativePoint="TOP">
						<Offset>
							<AbsDimension x="0" y="-80" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_ICONSIZE.."(60)")
						_G[self:GetName().."High"]:SetText(EA_XICON_LARGE.."(100)")
						_G[self:GetName().."Low"]:SetText(EA_XICON_SMALL.."(20)")
						self:SetMinMaxValues(20.0,100.0)
						self:SetValueStep(1.0)
					</OnLoad>
					<OnValueChanged>
						EA_Config.IconSize = floor(self:GetValue())
						_G[self:GetName().."Text"]:SetText(EA_XICON_ICONSIZE.."("..EA_Config.IconSize..")")
						_G.EventAlertMod:Icon_Options_Frame_AdjustTimerFontSize()
						_G.EventAlertMod:Icon_Options_Frame_PaintAlertFrame()
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER")
						GameTooltip:SetText(EA_TTIP_ICONSIZE)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Slider>
			<Slider name="$parent_IconXOffset" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconSize" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_HORSPACE.."(100)")
						_G[self:GetName().."High"]:SetText(EA_XICON_MORE.."(200)")
						_G[self:GetName().."Low"]:SetText(EA_XICON_LESS.."(-200)")
						self:SetMinMaxValues(-200.0,200.0)
						self:SetValueStep(5.0)
					</OnLoad>
					<OnValueChanged>
						EA_Position.xOffset = floor(self:GetValue()) 
						_G[self:GetName().."Text"]:SetText(EA_XICON_HORSPACE.."("..(EA_Position.xOffset+100)..")")
						_G.EventAlertMod:Icon_Options_Frame_PaintAlertFrame()
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER")
						GameTooltip:SetText(EA_TTIP_ICONXOFFSET)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Slider>
			<Slider name="$parent_IconYOffset" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconXOffset" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_VERSPACE.."(0)")
						_G[self:GetName().."High"]:SetText(EA_XICON_MORE.."(200)")
						_G[self:GetName().."Low"]:SetText(EA_XICON_LESS.."(-200)")
						self:SetMinMaxValues(-200.0,200.0)
						self:SetValueStep(5.0)
					</OnLoad>
					<OnValueChanged>
						EA_Position.yOffset = floor(self:GetValue())
						_G[self:GetName().."Text"]:SetText(EA_XICON_VERSPACE.."("..EA_Position.yOffset..")")
						_G.EventAlertMod:Icon_Options_Frame_PaintAlertFrame()
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER")
						GameTooltip:SetText(EA_TTIP_ICONYOFFSET)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Slider>
			<Slider name="$parent_IconRedDebuff" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconYOffset" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_REDDEBUFF.."(50%)")
						_G[self:GetName().."High"]:SetText(EA_XICON_LIGHT.."(0%)")
						_G[self:GetName().."Low"]:SetText(EA_XICON_DEEP.."(100%)")
						self:SetMinMaxValues(-50.0,50.0)
						self:SetValueStep(1.0)
					</OnLoad>
					<OnValueChanged>
						EA_Position.RedDebuff = (floor(self:GetValue()) + 50) / 100
						_G[self:GetName().."Text"]:SetText(EA_XICON_REDDEBUFF.."("..(100 - 100*EA_Position.RedDebuff).."%)")
						_G.EventAlertMod:Icon_Options_Frame_PaintAlertFrame()
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER")
						GameTooltip:SetText(EA_TTIP_ICONREDDEBUFF)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Slider>
			<Slider name="$parent_IconGreenDebuff" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconRedDebuff" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_GREENDEBUFF.."(50%)")
						_G[self:GetName().."High"]:SetText(EA_XICON_LIGHT.."(0%)")
						_G[self:GetName().."Low"]:SetText(EA_XICON_DEEP.."(100%)")
						self:SetMinMaxValues(-50.0,50.0)
						self:SetValueStep(1.0)
					</OnLoad>
					<OnValueChanged>
						EA_Position.GreenDebuff = (floor(self:GetValue()) + 50) / 100
						_G[self:GetName().."Text"]:SetText(EA_XICON_GREENDEBUFF.."("..(100 - 100*EA_Position.GreenDebuff).."%)")
						_G.EventAlertMod:Icon_Options_Frame_PaintAlertFrame()
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER")
						GameTooltip:SetText(EA_TTIP_ICONGREENDEBUFF)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Slider>
			<Slider name="$parent_IconExecution" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconGreenDebuff" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_EXECUTION.."(25%)")
						_G[self:GetName().."High"]:SetText(EA_XICON_EXEFULL)
						_G[self:GetName().."Low"]:SetText(EA_XICON_EXECLOSE)
						self:SetMinMaxValues(0,100.0)
						self:SetValueStep(5.0)
					</OnLoad>
					<OnValueChanged>
						EA_Position.Execution = tonumber(format("%d",self:GetValue()))
						<!-- _G[self:GetName().."Text"]:SetText(EA_XICON_EXECUTION.."("..EA_Position.Execution .."%)") -->
						_G[self:GetName().."Text"]:SetFormattedText("%s(%d)%%", EA_XICON_EXECUTION, EA_Position.Execution) 
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER")
						GameTooltip:SetText(EA_TTIP_ICONEXECUTION)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Slider>
			<CheckButton name="$parent_PlayerLv2BOSS" inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconExecution" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="10" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Lv2")
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Position.PlayerLv2BOSS = true
						else
							EA_Position.PlayerLv2BOSS = false
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_PLAYERLV2BOSS)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--技能冷卻使用倒數陰影 -->
			<CheckButton 	name="$parent_SCD_UseCooldown" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_IconExecution" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="-40" y="-15" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_SCD_USECOOLDOWN)
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Position.SCD_UseCooldown = true
						else
							EA_Position.SCD_UseCooldown = false
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SCD_USECOOLDOWN)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用聖能提示 -->
			<CheckButton 	name="$parent_SpecFlag_HolyPower" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="EA_Icon_Options_Frame" 
							relativePoint="BOTTOMLEFT">
					<!-- <Anchor point="TOPLEFT" relativeTo="$parent_SCD_UseCooldown" relativePoint="BOTTOMLEFT"> -->
						<Offset>
							<AbsDimension x="20" y="290" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.HolyPower)
					</OnLoad>
					<OnClick>
						
						EA_Config.SpecPowerCheck.HolyPower = self:GetChecked()
						_G.EventAlertMod:SpecialFrame_Update() 						
						
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.HolyPower)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用符能提示 -->
			<CheckButton 	name="$parent_SpecFlag_RunicPower" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_HolyPower" 
							relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.RunicPower)
					</OnLoad>
					<OnClick>
						
						EA_Config.SpecPowerCheck.RunicPower = self:GetChecked()							
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.RunicPower)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用靈魂碎片提示 -->
			<CheckButton 	name="$parent_SpecFlag_SoulShards" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_HolyPower" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.SoulShards)
					</OnLoad>
					<OnClick>
						
						EA_Config.SpecPowerCheck.SoulShards = self:GetChecked()
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.SoulShards)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用星能提示 -->
			<CheckButton 	name="$parent_SpecFlag_LunarPower" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_SoulShards" 
							relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.LunarPower)
					</OnLoad>
					<OnClick>						
						EA_Config.SpecPowerCheck.LunarPower = self:GetChecked()
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.LunarPower)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用連擊點數提示 -->
			<CheckButton 	name="$parent_SpecFlag_ComboPoints" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_SoulShards" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.ComboPoints)
					</OnLoad>
					
					<OnClick>   						
						EA_Config.SpecPowerCheck.ComboPoints = self:GetChecked()						
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.ComboPoints)
					</OnEnter>
					
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
					
				</Scripts>
			</CheckButton>
			
			<!--啟用停用生命之花提示 -->
			<CheckButton 	name="$parent_SpecFlag_LifeBloom" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_ComboPoints" 
							relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.LifeBloom)
					</OnLoad>
					<OnClick>
						
						EA_Config.SpecPowerCheck.LifeBloom = self:GetChecked()						
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.LifeBloom)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用真氣提示 -->
			<CheckButton 	name="$parent_SpecFlag_Chi" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_ComboPoints" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Chi)
					</OnLoad>
					<OnClick>       						
						EA_Config.SpecPowerCheck.Chi = self:GetChecked()
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Chi)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用能量提示 -->
			<CheckButton 	name="$parent_SpecFlag_Energy" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Chi" 
							relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Energy)
					</OnLoad>
					<OnClick>
						EA_Config.SpecPowerCheck.Energy = self:GetChecked()						
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Energy)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用怒氣提示 -->
			<CheckButton 	name="$parent_SpecFlag_Rage" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Chi" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Rage)
					</OnLoad>
					<OnClick>   						
						EA_Config.SpecPowerCheck.Rage = self:GetChecked()
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Rage)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用獵人集中值提示 -->
			<CheckButton 	name="$parent_SpecFlag_Focus" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Rage" 
							relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Focus)
					</OnLoad>
					<OnClick>
						
						EA_Config.SpecPowerCheck.Focus = self:GetChecked()
						
						_G.EventAlertMod:SpecialFrame_Update() 
						_G.EventAlertMod:UpdateFocus()						
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Focus)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用瘋狂值提示 -->
			<CheckButton	name="$parent_SpecFlag_Insanity" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Rage" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Insanity)
					</OnLoad>
					<OnClick>
						
						EA_Config.SpecPowerCheck.Insanity = self:GetChecked()
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Insanity)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用秘法衝擊提示 -->
			<CheckButton 	name="$parent_SpecFlag_ArcaneCharges" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Insanity" 
							relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.ArcaneCharges)
					</OnLoad>
					<OnClick>
						
						EA_Config.SpecPowerCheck.ArcaneCharges  = self:GetChecked()
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.ArcaneCharges)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用元能提示 -->
			<CheckButton	 name="$parent_SpecFlag_Maelstrom" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Insanity" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Maelstrom)
					</OnLoad>
					<OnClick>						
						EA_Config.SpecPowerCheck.Maelstrom  = self:GetChecked()						
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Maelstrom)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用符文提示 -->
			<CheckButton 	name="$parent_SpecFlag_Runes" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Maelstrom" 
							relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Runes)
					</OnLoad>
					<OnClick>
						
						EA_Config.SpecPowerCheck.Runes  = self:GetChecked()						
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Runes)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用魔怒提示 -->
			<CheckButton 	name="$parent_SpecFlag_Fury" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_RunicPower" 
							relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Fury)
					</OnLoad>
					<OnClick>      						
						EA_Config.SpecPowerCheck.Fury = self:GetChecked()						
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Fury)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用法力值提示 -->
			<CheckButton 	name="$parent_SpecFlag_Mana" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Fury" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Mana)
					</OnLoad>
					<OnClick>					
							EA_Config.SpecPowerCheck.Mana = self:GetChecked()						
							
							_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Mana)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
					
			<!--啟用停用快樂值提示 -->
			<CheckButton 	name="$parent_SpecFlag_Happiness" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Mana" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Happiness)						
					</OnLoad>
					<OnClick>						
						EA_Config.SpecPowerCheck.Happiness = self:GetChecked()						
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Happiness)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用"寵物集中值("Pet Focus)提示 -->
			<CheckButton 	name="$parent_SpecFlag_FocusPet" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Happiness" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.FocusPet)						
					</OnLoad>
					<OnClick>						
						EA_Config.SpecPowerCheck.FocusPet = self:GetChecked()						
						_G.EventAlertMod:SpecialFrame_Update()	
						_G.EventAlertMod:UpdateFocus()
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.FocusPet)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!--啟用停用"龍能"(Essence)提示 -->
			<CheckButton	name="$parent_SpecFlag_Essence" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_FocusPet" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Essence)						
					</OnLoad>
					<OnClick>						
						EA_Config.SpecPowerCheck.Essence = self:GetChecked()						
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Essence)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>

			<!--啟用停用"活力"(Vigor)提示 -->
			<CheckButton	name="$parent_SpecFlag_Vigor" 
							inherits="UICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" 
							relativeTo="$parent_SpecFlag_Essence" 
							relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_SPELL_POWER_NAME.Vigor)						
					</OnLoad>
					<OnClick>						
						EA_Config.SpecPowerCheck.Vigor = self:GetChecked()						
						
						_G.EventAlertMod:SpecialFrame_Update() 
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT")
						GameTooltip:SetText(EA_TTIP_SPECFLAG_CHECK.Vigor)
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<Button name="$parent_ToggleAlertFrame" inherits="UIPanelButtonTemplate" text="">
				<Size>
					<AbsDimension x="175" y="21" />
				</Size>
				<Anchors>
					<Anchor point="CENTER" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="50" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_TOGGLE_ALERTFRAME)
					</OnLoad>
					<OnClick>
						PlaySound(SOUNDKIT.GS_TITLE_OPTION_OK)
						_G.EventAlertMod:Icon_Options_Frame_ToggleAlertFrame()
					</OnClick>
				</Scripts>
			</Button>
			
			<Button name="$parent_ResetAlertPosition" inherits="UIPanelButtonTemplate" text="">
				<Size>
					<AbsDimension x="150" y="21" />
				</Size>
				<Anchors>
					<Anchor point="CENTER" relativeTo="$parent_ToggleAlertFrame" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="-13" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_RESET_FRAMEPOS)
					</OnLoad>
					<OnClick>
						PlaySound(SOUNDKIT.GS_TITLE_OPTION_OK)
						_G.EventAlertMod:Icon_Options_Frame_ResetFrame()
					</OnClick>
				</Scripts>
			</Button>
			
		</Frames>
		<Layers>
			<Layer>
				<Texture name="$parent_Header" file="Interface\DialogFrame\UI-DialogBox-Header">
					<Size>
						<AbsDimension x="400" y="64" />
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="12" />
							</Offset>
						</Anchor>
					</Anchors>
				</Texture>
				<FontString inherits="GameFontNormal" text="Icon Position Options">
					<Anchors>
						<Anchor point="TOP" relativeTo="$parent_Header">
							<Offset>
								<AbsDimension x="0" y="-14" />
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self:RegisterForDrag("LeftButton")
				_G.EventAlertMod.Icon_Options_Frame_OnLoad()
			</OnLoad>
			<OnMouseDown>
				_G.EventAlertMod:Icon_Options_Frame_MouseDown(button)
			</OnMouseDown>
			<OnMouseUp>
				_G.EventAlertMod:Icon_Options_Frame_MouseUp(button)
			</OnMouseUp>
		</Scripts>
	</Frame>
</Ui>